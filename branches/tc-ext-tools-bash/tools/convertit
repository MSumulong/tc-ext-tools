#!/bin/bash

############################################################################
#                                                                          #
#     convertit: Converts the package source to xz compressed tarball      #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  (C) Copyright 2011 Sercan Arslan
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh" ]; then
     . "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ ! -e "$TCEXTTOOLS_SOURCE" ]; then
       print_it error "You must download it first!"
       exit 1
fi

this_main() {

   echo ""
   echo "Converting the package $PACKAGE source ..."

   echo "Cleaning the package temporary source directory."
   [ -d "$TCEXTTOOLS_SRC_TEMP" ] && sudo rm -rf "$TCEXTTOOLS_SRC_TEMP"
   mkdir -p "$TCEXTTOOLS_SRC_TEMP"

   echo "The source type is set to $SOURCE_TYPE."

   if [ "$SOURCE_TYPE" = "bz2" ]; then
        echo "Decompressing the package source with bzip2."
        bzip2 -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.bz2}" || return 1

        echo "Compressing the package source with xz."
        xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.bz2}" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.bz2}.xz" "$TCEXTTOOLS_SRC" || return 1
   elif [ "$SOURCE_TYPE" = "gz" ]; then
        echo "Decompressing the package source with gzip."
        gzip -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.gz}" || return 1

        echo "Compressing the package source with xz."
        xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.gz}" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.gz}.xz" "$TCEXTTOOLS_SRC" || return 1
   elif [ "$SOURCE_TYPE" = "tgz" ]; then
        echo "Decompressing the package source with gzip."
        gzip -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tgz}.tar" || return 1

        echo "Compressing the package source with xz."
        xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tgz}.tar" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tgz}.tar.xz" "$TCEXTTOOLS_SRC" || return 1
   elif [ "$SOURCE_TYPE" = "tbz2" ]; then
        echo "Decompressing the package source with bzip2."
        bzip2 -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tbz2}.tar" || return 1

        echo "Compressing the package source with xz."
        xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tbz2}.tar" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tbz2}.tar.xz" "$TCEXTTOOLS_SRC" || return 1
   elif [ "$SOURCE_TYPE" = "tar" ]; then
        echo "Copying the package source to the temporary source directory."
        cp "$TCEXTTOOLS_SOURCE" "$TCEXTTOOLS_SRC_TEMP" || return 1

        echo "Compressing the package source with xz."
        xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tar}.tar" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.tar}.tar.xz" "$TCEXTTOOLS_SRC" || return 1
   elif [ "$SOURCE_TYPE" = "zip" ]; then
        echo "Unzipping the package source to the temporary source directory."
        unzip "$TCEXTTOOLS_SOURCE" -d "$TCEXTTOOLS_SRC_TEMP" || return 1

        echo "Creating a tarball from the unzipped source."
        tar -C "$TCEXTTOOLS_SRC_TEMP" -cJf "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.zip}.tar.xz" "$(ls $TCEXTTOOLS_SRC_TEMP)" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE_NAME%.zip}.tar.xz" "$TCEXTTOOLS_SRC" || return 1
   elif [ "$SOURCE_TYPE" = "custom" ]; then
        echo "Executing the custom convert function defined in the package build file."
        cd "$TCEXTTOOLS_SRC_TEMP"
        build_convert || return 1
   else
        echo "Error! unsupported source type."
        return 1
   fi

   echo ""
   echo "Converted the package $PACKAGE source successfully."

   return 0

}

print_it "Converting the package $PACKAGE source ... \c"
this_main > "$TCEXTTOOLS_MESSAGE_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

