#!/bin/bash

############################################################################
#                                                                          #
#                downloadit: Downloads the package source                  #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  (C) Copyright 2011 Sercan Arslan
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh" ]; then
     . "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

this_main() {

   echo ""
   echo "Downloading the package $PACKAGE source ..."

   echo "Cleaning the package source directory."
   [ -d "${_PACKAGE_SRC}" ] && sudo rm -rf "${_PACKAGE_SRC}"
   mkdir -p "${_PACKAGE_SRC}" || return 1

   if [ -n "$SOURCE_URL_TYPE" ]; then
        echo "Source url type is set to $SOURCE_URL_TYPE."

        echo "Cleaning the temporary source directory."
        [ -d "$PACKAGE_SRC_TEMP" ] && sudo rm -rf "$PACKAGE_SRC_TEMP"
        mkdir -p "$PACKAGE_SRC_TEMP"

        cd "$PACKAGE_SRC_TEMP"

        if [ "$SOURCE_URL_TYPE" = "svn" ]; then
             echo "Checking out the svn repository $SOURCE"
             svn --non-interactive --trust-server-cert co "$SOURCE" "$PACKAGE_SOURCE_TOPDIR" || return 1

             echo "Creating a tarball from the source."
             tar --exclude-vcs -cvJf "$SOURCE_NAME" "$SOURCE_TOPDIR" || return 1

             echo "Moving the tarball to the package source directory."
             mv -f "$SOURCE_NAME" "${_PACKAGE_SRC}" || return 1
        elif [ "$SOURCE_URL_TYPE" = "git" ]; then
             echo "Cloning the git repository $SOURCE"
             git clone "$SOURCE" "$PACKAGE_SOURCE_TOPDIR" || return 1

             echo "Creating a tarball from the source."
             tar --exclude-vcs -cvJf "$SOURCE_NAME" "$SOURCE_TOPDIR" || return 1

             echo "Moving the tarball to the package source directory."
             mv -f "$SOURCE_NAME" "${_PACKAGE_SRC}" || return 1
        fi
   else
        echo "Downloading the package source $SOURCE_NAME from the url $SOURCE"
        wget --no-check-certificate "$SOURCE" -O "$PACKAGE_SOURCE" || return 1
   fi

   echo ""
   echo "Downloaded the package $PACKAGE source successfully."

   return 0

}

print_it "Downloading the package $PACKAGE source ... \c"
this_main > "$PACKAGE_MESSAGE_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

