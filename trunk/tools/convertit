#!/bin/sh
#
#  convertit: Converts the package source to xz compressed tarball

############################################################################
#                                                                          #
#     convertit: Converts the package source to xz compressed tarball      #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  (C) Copyright 2010 Sercan Arslan
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/tc-ext-tools/functions" ]; then
     . "$TCEXTTOOLS_ROOT/etc/tc-ext-tools/functions"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ ! -e "$TCEXTTOOLS_SOURCE" ]; then
     print_it error "You must download it first!"
     return 1
fi

COMMAND="$1"

this_main() {

  [ -d "$TCEXTTOOLS_SRC_TEMP" ] && sudo rm -rf "$TCEXTTOOLS_SRC_TEMP"
  mkdir -p "$TCEXTTOOLS_SRC_TEMP"

  if [ ! -e "$TCEXTTOOLS_CONVERTED_SOURCE" ] || [ "$COMMAND" = "force" ]; then
       if [ "$SOURCE_TYPE" = "bz2" ]; then
            bzip2 -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.bz2}" || return 1
            xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.bz2}" || return 1
            busybox mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.bz2}.xz" "$TCEXTTOOLS_SRC" || return 1
       elif [ "$SOURCE_TYPE" = "gz" ]; then
            gzip -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.gz}" || return 1
            xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.gz}" || return 1
            busybox mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.gz}.xz" "$TCEXTTOOLS_SRC" || return 1
       elif [ "$SOURCE_TYPE" = "tgz" ]; then
            gzip -d -c "$TCEXTTOOLS_SOURCE" > "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.tgz}.tar" || return 1
            xz "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.tgz}.tar" || return 1
            busybox mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.tgz}.tar.xz" "$TCEXTTOOLS_SRC" || return 1
       elif [ "$SOURCE_TYPE" = "zip" ]; then
            unzip "$TCEXTTOOLS_SOURCE" -d "$TCEXTTOOLS_SRC_TEMP" || return 1
            tar -C "$TCEXTTOOLS_SRC_TEMP" -cJf "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.zip}.tar.xz" "$TOP_SRC" || return 1
            busybox mv -f "$TCEXTTOOLS_SRC_TEMP/${SOURCE%.zip}.tar.xz" "$TCEXTTOOLS_SRC" || return 1
       elif [ "$SOURCE_TYPE" = "custom" ]; then
            cd "$TCEXTTOOLS_SRC_TEMP"
            build_convert || return 1
       fi
  fi

  return 0
}

print_it "Converting the package $PACKAGE source to xz compressed tarball ... \c"
this_main > "$TCEXTTOOLS_ERROR_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

