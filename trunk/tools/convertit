#!/bin/sh

############################################################################
#                                                                          #
#     convertit: Converts the package source to xz compressed tarball      #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Copyright (c) 2011 Sercan Arslan <arslanserc@gmail.com>
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/tc-ext-tools/functions" ]; then
     . "$TCEXTTOOLS_ROOT/etc/tc-ext-tools/functions"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ ! -f "$PACKAGE_SOURCE" ]; then
       print_it error "You must download it first!"
       exit 1
fi

this_main() {

   echo "---------------------------------------------------------------"
   echo ""
   echo "Converting the package $PACKAGE source ..."
   echo ""
   echo "---------------------------------------------------------------"

   echo "Cleaning the package src temporary directory."
   [ -d "$PACKAGE_SRC_TEMP" ] && sudo rm -rf "$PACKAGE_SRC_TEMP"
   mkdir -p "$PACKAGE_SRC_TEMP"

   if [ "$PACKAGE_SOURCE_TYPE" = "bz2" ]; then
        echo "Decompressing the package source with bzip2."
        bzip2 -d -c "$PACKAGE_SOURCE" > "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.bz2}" || return 1

        echo "Compressing the package source with xz."
        xz "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.bz2}" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.bz2}.xz" "$_PACKAGE_SRC" || return 1
   elif [ "$PACKAGE_SOURCE_TYPE" = "gz" ]; then
        echo "Decompressing the package source with gzip."
        gzip -d -c "$PACKAGE_SOURCE" > "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.gz}" || return 1

        echo "Compressing the package source with xz."
        xz "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.gz}" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.gz}.xz" "$_PACKAGE_SRC" || return 1
   elif [ "$PACKAGE_SOURCE_TYPE" = "tgz" ]; then
        echo "Decompressing the package source with gzip."
        gzip -d -c "$PACKAGE_SOURCE" > "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tgz}.tar" || return 1

        echo "Compressing the package source with xz."
        xz "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tgz}.tar" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tgz}.tar.xz" "$_PACKAGE_SRC" || return 1
   elif [ "$PACKAGE_SOURCE_TYPE" = "tbz2" ]; then
        echo "Decompressing the package source with bzip2."
        bzip2 -d -c "$PACKAGE_SOURCE" > "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tbz2}.tar" || return 1

        echo "Compressing the package source with xz."
        xz "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tbz2}.tar" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tbz2}.tar.xz" "$_PACKAGE_SRC" || return 1
   elif [ "$PACKAGE_SOURCE_TYPE" = "tar" ]; then
        echo "Copying the package source to the temporary source directory."
        cp "$PACKAGE_SOURCE" "$PACKAGE_SRC_TEMP" || return 1

        echo "Compressing the package source with xz."
        xz "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tar}.tar" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.tar}.tar.xz" "$_PACKAGE_SRC" || return 1
   elif [ "$PACKAGE_SOURCE_TYPE" = "zip" ]; then
        echo "Unzipping the package source to the temporary source directory."
        unzip "$PACKAGE_SOURCE" -d "$PACKAGE_SRC_TEMP" || return 1

        echo "Creating a tarball from the unzipped source."
        tar -C "$PACKAGE_SRC_TEMP" -cJf "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.zip}.tar.xz" "$(ls $PACKAGE_SRC_TEMP)" || return 1

        echo "Moving the converted source to the package source directory."
        mv -f "$PACKAGE_SRC_TEMP/${PACKAGE_SOURCE_NAME%.zip}.tar.xz" "$_PACKAGE_SRC" || return 1
   elif [ "$PACKAGE_SOURCE_TYPE" = "custom" ]; then
        echo "Executing the package build convert function."
        cd "$PACKAGE_SRC_TEMP"
        build_convert || return 1
   else
        echo "Error! Unsupported source type."
        return 1
   fi

   echo "---------------------------------------------------------------"
   echo ""
   echo "Converted the package $PACKAGE source successfully."
   echo ""
   echo "---------------------------------------------------------------"

   return 0

}

print_it "Converting the package $PACKAGE source ... \c"
this_main > "$PACKAGE_MESSAGE_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

