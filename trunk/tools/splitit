#!/bin/sh

############################################################################
#                                                                          #
#                 splitit: Splits the package extensions                   #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Copyright (c) 2011 Sercan Arslan <arslanserc@gmail.com>
#

. /etc/init.d/tc-functions

TET_ROOT="$(dirname $0)/.."

if [ -f "$TET_ROOT/share/tet/functions.sh" ]; then
     . "$TET_ROOT/share/tet/functions.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ -n "$HAVE_TET_INSTALL" -a ! -f "$PACKAGE_INSTALL_STAMP" ]; then
     echo "${ERROR_COLOR}You must install it first!${NORMAL}"
     exit 1
fi

this_split() {

   echo "---------------------------------------------------------------"
   echo "Getting the paths from the package extension install"
   echo "---------------------------------------------------------------"
   PATHS=$(cat $PACKAGE_EXTENSION_INSTALL)
   if [ -z "$PATHS" ]; then
        PATHS="."
   fi

   echo "---------------------------------------------------------------"
   echo "Cleaning the package extension bin temporary directory"
   echo "---------------------------------------------------------------"
   [ -d "$PACKAGE_EXTENSION_BIN_TEMP" ] && sudo rm -rf "$PACKAGE_EXTENSION_BIN_TEMP"
   mkdir -p "$PACKAGE_EXTENSION_BIN_TEMP" || return 1

   cd "$PACKAGE_EXTENSION_BIN_TEMP"

   echo "---------------------------------------------------------------"
   echo "Setting the include and the exclude paths"
   echo "---------------------------------------------------------------"
   unset INCLUDE_PATHS EXCLUDE_PATHS

   for i in $PATHS
   do
       echo "---------------------------------------------------------------"
       echo "Processing the path $i"
       echo "---------------------------------------------------------------"
       i=$(eval echo "$i")

       echo -e "Checking if the path is commented out ... \c"
       if [ "${i#\#}" != "$i" ]; then
            echo "yes"
            continue
       else
            echo "no"
       fi

       echo -e "Checking if the path is excluded ... \c"
       if [ "${i#x-}" = "$i" ]; then
            echo "no"
            echo "Putting the path to the include paths"
            INCLUDE_PATHS="$INCLUDE_PATHS $i"
       else
            echo "yes"
            i="${i#x-}"
            echo "Putting the path to the exclude paths"
            EXCLUDE_PATHS="$EXCLUDE_PATHS $i"
       fi
   done

   cd "$PACKAGE_INSTALL_ROOT"

   echo "---------------------------------------------------------------"
   echo "Creating the files to include list"
   echo "---------------------------------------------------------------"
   LIST="${PACKAGE_EXTENSION_BIN_TEMP}/install.list"
   touch "$LIST"
   if [ -n "$INCLUDE_PATHS" ]; then
        sudo find $INCLUDE_PATHS -not -type d >> "$LIST" || return 1
   fi
   cat "$LIST"

   echo "---------------------------------------------------------------"
   echo "Creating the files to exclude list"
   echo "---------------------------------------------------------------"
   X_LIST="${PACKAGE_EXTENSION_BIN_TEMP}/x-install.list"
   touch "$X_LIST"
   if [ -n "$EXCLUDE_PATHS" ]; then
        sudo find $EXCLUDE_PATHS -not -type d >> "$X_LIST" || return 1
   fi
   cat "$X_LIST"

   echo "---------------------------------------------------------------"
   echo "Creating the package extension files tarball using the files to include and the files to exclude lists"
   echo "---------------------------------------------------------------"
   sudo tar -T "$LIST" -X "$X_LIST" -cvpzf "$PACKAGE_EXTENSION_BIN_TEMP/pkg.tar.gz" || return 1

   echo "---------------------------------------------------------------"
   echo "Cleaning the package extension bin directory"
   echo "---------------------------------------------------------------"
   [ -d "$PACKAGE_EXTENSION_BIN" ] && sudo rm -rf "$PACKAGE_EXTENSION_BIN"
   sudo mkdir -p "$PACKAGE_EXTENSION_BIN"

   echo "---------------------------------------------------------------"
   echo "Extracting the package extension files tarball to the package extension bin directory"
   echo "---------------------------------------------------------------"
   sudo mkdir -p "$PACKAGE_EXTENSION_BIN"
   sudo tar -C "$PACKAGE_EXTENSION_BIN" -pxzf "$PACKAGE_EXTENSION_BIN_TEMP/pkg.tar.gz" || return 1

   echo "Cleaning the package extension bin temporary directory"
   sudo rm -rf "$PACKAGE_EXTENSION_BIN_TEMP"

   return 0

}

this_main() {

   echo "---------------------------------------------------------------"
   echo ""
   echo "Splitting the package $PACKAGE extensions ..."
   echo ""
   echo "---------------------------------------------------------------"

   for EXTENSION in $EXTENSIONS
   do
       set_extension

       echo "---------------------------------------------------------------"
       echo "Splitting the package extension $PACKAGE_EXTENSION_NAME"
       echo "---------------------------------------------------------------"

       echo "Cleaning the package bin temporary directory"
       [ -d "$PACKAGE_BIN_TEMP" ] && sudo rm -rf "$PACKAGE_BIN_TEMP"
       mkdir -p "$PACKAGE_BIN_TEMP" || return 1

       this_split
       if [ "$?" -gt 0 ]; then
            echo "---------------------------------------------------------------"
            echo "Error! splitting the package extension $PACKAGE_EXTENSION_NAME failed"
            echo "---------------------------------------------------------------"

            return 1
       else
            echo "---------------------------------------------------------------"
            echo "Splitting the package extension $PACKAGE_EXTENSION_NAME successful"
            echo "---------------------------------------------------------------"
       fi
   done

   echo "---------------------------------------------------------------"
   echo ""
   echo "Splitted the package $PACKAGE extensions successfully."
   echo ""
   echo "---------------------------------------------------------------"

   return 0

}

[ -f "$PACKAGE_SPLIT_STAMP" ] && sudo rm -f "$PACKAGE_SPLIT_STAMP"

echo -e "${MESSAGE_COLOR}Splitting the package ${MESSAGE_COLOR_H}$PACKAGE${MESSAGE_COLOR} extensions ... ${NORMAL}\c"
this_main > "$PACKAGE_MESSAGE_LOG" 2>&1
if [ "$?" -gt 0 ]; then
     echo "${ERROR_COLOR}failed!${NORMAL}"
     echo "${WARNING_COLOR}For details: ${WARNING_COLOR_H}buildit --print message${NORMAL}"
     exit 1
fi
echo "${MESSAGE_COLOR_H}successful!${NORMAL}"

touch "$PACKAGE_SPLIT_STAMP"

exit 0

