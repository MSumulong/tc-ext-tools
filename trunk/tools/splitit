#!/bin/sh

############################################################################
#                                                                          #
#               splitit: Splits the package into extensions                #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Copyright (c) 2011 Sercan Arslan <arslanserc@gmail.com>
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh" ]; then
     . "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ ! -d "$PACKAGE_INSTALL_ROOT" ]; then
       print_it error "You must install it first!"
       exit 1
fi

this_split() {

   echo "---------------------------------------------------------------"
   echo "Getting the contents of the package extension install."
   echo "---------------------------------------------------------------"
   CONTENTS=$(cat $PACKAGE_EXTENSION_INSTALL)
   if [ -z "$CONTENTS" ]; then
        echo "Warning! The package extension install is empty."
        CONTENTS="."
   fi

   echo "---------------------------------------------------------------"
   echo "Creating the include and the exclude lists."
   echo "---------------------------------------------------------------"
   LIST="${PACKAGE_BIN_TEMP}/install.list"
   X_LIST="${PACKAGE_BIN_TEMP}/x-install.list"
   touch "$LIST"
   touch "$X_LIST"

   cd "$PACKAGE_INSTALL_ROOT"
   for i in $CONTENTS
   do
       echo "---------------------------------------------------------------"
       echo "Processing the content $i"
       echo "---------------------------------------------------------------"

       echo -e "Checking if the content is commented out ... \c"
       if [ "${i#\#}" != "$i" ]; then
            echo "yes"
            continue
       else
            echo "no"
       fi

       i=$(eval echo "$i")
       if [ -z "$(echo "$i" | grep '*')" ]; then
            if [ "${i#x-}" = "$i" ]; then
                 echo "Putting the files in the content to the include list."
                 sudo find "$i" -not -type d >> "$LIST" || return 1
            else
                 i="${i#x-}"
                 echo "Putting the files in the content to the exclude list."
                 sudo find "$i" -not -type d >> "$X_LIST" || return 1
            fi
       else
            if [ "${i#x-}" = "$i" ]; then
                 echo "Putting the files in the content to the include list."
                 sudo find $i -not -type d >> "$LIST" || return 1
            else
                 i="${i#x-}"
                 echo "Putting the files in the content to the exclude list."
                 sudo find $i -not -type d >> "$X_LIST" || return 1
            fi
       fi
   done

   echo "---------------------------------------------------------------"
   echo "Creating the extension contents tarball using the include and the exclude lists."
   echo "---------------------------------------------------------------"
   sudo tar -T "$LIST" -X "$X_LIST" -cvpzf "$PACKAGE_BIN_TEMP/pkg.tar.gz" || return 1

   echo "---------------------------------------------------------------"
   echo "Cleaning the package extension bin directory."
   echo "---------------------------------------------------------------"
   [ -d "$PACKAGE_EXTENSION_BIN" ] && sudo rm -rf "$PACKAGE_EXTENSION_BIN"
   sudo mkdir -p "$PACKAGE_EXTENSION_BIN"

   echo "---------------------------------------------------------------"
   echo "Extracting the extension contents tarball to the extension bin directory."
   echo "---------------------------------------------------------------"
   sudo mkdir -p "$PACKAGE_EXTENSION_BIN"
   sudo tar -C "$PACKAGE_EXTENSION_BIN" -pxzf "$PACKAGE_BIN_TEMP/pkg.tar.gz" || return 1

   echo "Cleaning the extension bin temporary directory."
   sudo rm -rf "$PACKAGE_BIN_TEMP"

   return 0

}

this_main() {

   echo "---------------------------------------------------------------"
   echo ""
   echo "Splitting the package $PACKAGE extensions ..."
   echo ""
   echo "---------------------------------------------------------------"

   for EXTENSION in $EXTENSIONS
   do
       set_extension

       echo "---------------------------------------------------------------"
       echo "Splitting the package extension $PACKAGE_EXTENSION_NAME"
       echo "---------------------------------------------------------------"

       echo "Cleaning the package bin temporary directory."
       [ -d "$PACKAGE_BIN_TEMP" ] && sudo rm -rf "$PACKAGE_BIN_TEMP"
       mkdir -p "$PACKAGE_BIN_TEMP"

       this_split
       if [ "$?" -gt 0 ]; then
            echo "---------------------------------------------------------------"
            echo "Error! splitting the package extension $PACKAGE_EXTENSION_NAME failed."
            echo "---------------------------------------------------------------"
            sudo rm -rf "$PACKAGE_BIN_TEMP"
            return 1
       else
            echo "---------------------------------------------------------------"
            echo "Splitting the package extension $PACKAGE_EXTENSION_NAME successful."
            echo "---------------------------------------------------------------"
       fi
   done

   echo "---------------------------------------------------------------"
   echo ""
   echo "Splitted the package $PACKAGE extensions successfully."
   echo ""
   echo "---------------------------------------------------------------"

   return 0

}

print_it "Splitting the package $PACKAGE extensions ... \c"
this_main > "$PACKAGE_MESSAGE_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

