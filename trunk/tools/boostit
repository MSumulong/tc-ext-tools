#!/bin/sh

############################################################################
#                                                                          #
#             boostit: Boosts the package for the first time               #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  (C) Copyright 2011 Sercan Arslan
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh" ]; then
     . "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

PACKAGE="$1"
VERSION="$2"
EXTENSIONS="$3"

print_usage(){

   echo -e "${TCEXTTOOLS_ERROR_COLOR}${THIS} usage:\n\t${TCEXTTOOLS_MESSAGE_COLOR}${THIS} package version \"extension1 extension2 ...\"${NORMAL}"

}

if [ -z "$PACKAGE" ] || [ -z "$VERSION" ]; then
     print_usage
     exit 1
fi

if [ -z "$EXTENSIONS" ]; then
     EXTENSIONS="$PACKAGE"
fi

echo -e "${TCEXTTOOLS_MESSAGE_COLOR}You entered :\n\n\t${TCEXTTOOLS_MESSAGE_COLOR}PACKAGE=${TCEXTTOOLS_WARNING_COLOR}$PACKAGE\n\t${TCEXTTOOLS_MESSAGE_COLOR}VERSION=${TCEXTTOOLS_WARNING_COLOR}$VERSION\n\t${TCEXTTOOLS_MESSAGE_COLOR}EXTENSIONS=${TCEXTTOOLS_WARNING_COLOR}$EXTENSIONS\n${NORMAL}"

if [ -f "$PACKAGE_COMMON" ]; then
     print_it warning "This package looks to be boosted before.\nIf you continue existing files will be overwritten.\nWould you like you continue ? [y or n]"
     read ans
     case "$ans" in
          y)
            print_it "You agreed to continue. The files will be overwritten."
            ;;
          n)
            print_it "You don't want to continue ? Farewell!"
            exit 0
            ;;
          *)
            print_it error "I don't understand what you are saying!"
            exit 1
            ;;
     esac
fi

############################################################################ 
#                                this main                                 #
############################################################################

this_main() {

   if [ -d "$PACKAGE_EXTENSIONS" ]; then
        rm -rf "$PACKAGE_EXTENSIONS"
   fi

   mkdir -p "$PACKAGE_EXTENSIONS" || return 1

   if [ "$VERSION" = "svn" ]; then

        cat > "$PACKAGE_COMMON" << _EOF
PACKAGE="$PACKAGE"
VERSION="svn\${YEAR}\${MONTH}\${DAY}"
SOURCE=""
VCS="svn"
BUILD_DEPENDS=""

DESCRIPTION="A brief description of package."
AUTHOR="authors of package"
SITE="http://www.package.com"
COPYING="GPL-2"
MAINTAINERS="$PACKAGE_MAINTAINER"
COMMENTS="This extension is PPI compatible."
CHANGELOG="---"
CURRENT="First Version"
_EOF

        [ "$?" -gt 0 ] && return 1

   elif [ "$VERSION" = "git" ]; then

        cat > "$PACKAGE_COMMON" << _EOF
PACKAGE="${PACKAGE}"
VERSION="git\${YEAR}\${MONTH}\${DAY}"
SOURCE=""
VCS="git"
BUILD_DEPENDS=""

DESCRIPTION="A brief description of package."
AUTHOR="authors of package"
SITE="http://www.package.com"
COPYING="GPL-2"
MAINTAINERS="$PACKAGE_MAINTAINER"
COMMENTS="This extension is PPI compatible."
CHANGELOG="---"
CURRENT="First Version"
_EOF

        [ "$?" -gt 0 ] && return 1

   else

        cat > "$PACKAGE_COMMON" << _EOF
PACKAGE="$PACKAGE"
VERSION="$VERSION"
SOURCE=""
BUILD_DEPENDS=""

DESCRIPTION="A brief description of package."
AUTHOR="authors of package"
SITE="http://www.package.com"
COPYING="GPL-2"
MAINTAINERS="$PACKAGE_MAINTAINER"
COMMENTS="This extension is PPI compatible."
CHANGELOG="---"
CURRENT="First Version"
_EOF

        [ "$?" -gt 0 ] && return 1

   fi

   install -m 644 "$TCEXTTOOLS_ROOT/share/tc-ext-tools/build" "$PACKAGE_BUILD" || return 1

   for EXTENSION in $EXTENSIONS
   do
       mkdir -p "$PACKAGE_EXTENSIONS/$EXTENSION" || return 1
       touch "$PACKAGE_EXTENSIONS/$EXTENSION/install" || return 1
       if [ "${EXTENSION%-doc}" = "$EXTENSION" ]; then
            touch "$PACKAGE_EXTENSIONS/$EXTENSION/dep" || return 1
       fi
       if [ ! "${EXTENSION%-locale}" = "$EXTENSION" ]; then
              echo "${EXTENSION%-locale}.tcz" > "$PACKAGE_EXTENSIONS/$EXTENSION/dep" || return 1
              echo "usr/local/share/locale" > "$PACKAGE_EXTENSIONS/$EXTENSION/install" || return 1
              echo "x-usr/local/share/locale" > "$PACKAGE_EXTENSIONS/${EXTENSION%-locale}/install" || return 1
       elif [ ! "${EXTENSION%-dev}" = "$EXTENSION" ]; then
              echo "${EXTENSION%-dev}.tcz" > "$PACKAGE_EXTENSIONS/$EXTENSION/dep" || return 1
       fi
   done

   return 0

}

print_it "Boosting the package $PACKAGE ... \c"
this_main > /dev/null 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

