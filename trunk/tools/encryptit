#!/bin/sh

############################################################################
#                                                                          #
#       encryptit: Encrypts the file with the default encryption key       #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Copyright (c) 2011 Sercan Arslan <arslanserc@gmail.com>
#

. /etc/init.d/tc-functions

TET_ROOT="$(dirname $0)/.."

if [ -f "$TET_ROOT/etctet/functions" ]; then
     . "$TET_ROOT/etctet/functions"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ -n "$HAVE_TET_PACKAGE" -a ! -f "$PACKAGE_PACKAGE_STAMP" ]; then
     echo "${ERROR_COLOR}You must package it first!${NORMAL}"
     exit 1
fi

this_main() {

   echo "---------------------------------------------------------------" > "$PACKAGE_MESSAGE_LOG"
   echo "" >> "$PACKAGE_MESSAGE_LOG"
   echo "Encrypting the package $PACKAGE ..." >> "$PACKAGE_MESSAGE_LOG"
   echo "" >> "$PACKAGE_MESSAGE_LOG"
   echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"

   echo -e "Checking if the package $PACKAGE tarball encrypted exists ... \c" >> "$PACKAGE_MESSAGE_LOG"
   if [ -f "$PACKAGE_PACKAGE_ENCRYPTED" ]; then
        echo "yes" >> "$PACKAGE_MESSAGE_LOG"
        echo "Removing the package $PACKAGE tarball encrypted." >> "$PACKAGE_MESSAGE_LOG"
        sudo rm -f "$PACKAGE_PACKAGE_ENCRYPTED"
   else
        echo "no" >> "$PACKAGE_MESSAGE_LOG"
   fi

   echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"
   echo "Running bcrypt to encrypt the package $PACKAGE tarball."  >> "$PACKAGE_MESSAGE_LOG"
   echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"
   echo "${MESSAGE_COLOR}Please enter the encryption key: ${HILIGHT_COLOR}$PACKAGE_ENCRYPTION_KEY${NORMAL}"

   bcrypt "$PACKAGE_PACKAGE"
   if [ "$?" -gt 0 ]; then
        echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"
        echo "" >> "$PACKAGE_MESSAGE_LOG"
        echo "Encrypting the package $PACKAGE failed." >> "$PACKAGE_MESSAGE_LOG"
        echo "" >> "$PACKAGE_MESSAGE_LOG"
        echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"
        return 1
   else
        echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"
        echo "" >> "$PACKAGE_MESSAGE_LOG"
        echo "Encrypted the package $PACKAGE successfully." >> "$PACKAGE_MESSAGE_LOG"
        echo "" >> "$PACKAGE_MESSAGE_LOG"
        echo "---------------------------------------------------------------" >> "$PACKAGE_MESSAGE_LOG"
   fi

   return 0

}

echo -e "${MESSAGE_COLOR}Encrypting the package ${HILIGHT_COLOR}$PACKAGE${MESSAGE_COLOR} ...${NORMAL}"
this_main
if [ "$?" -gt 0 ]; then
     echo "${ERROR_COLOR}failed!${NORMAL}"
     echo "${WARNING_COLOR}For details: ${WARNING_COLOR_H}buildit print message${NORMAL}"
     exit 1
fi
echo "${HILIGHT_COLOR}successful!${NORMAL}"

exit 0

