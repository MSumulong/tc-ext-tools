#!/bin/sh

############################################################################
#                                                                          #
#               splitit: Splits the package into extensions                #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  (C) Copyright 2011 Sercan Arslan
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh" ]; then
     . "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

if [ ! -d "$PACKAGE_INSTALL_ROOT" ]; then
       print_it error "You must install it first!"
       exit 1
fi

this_split() {

   echo "Getting the contents of the extension install."
   CONTENTS=$(cat $PACKAGE_EXTENSION_INSTALL)
   if [ -z "$CONTENTS" ]; then
        echo "Warning! The extension install is empty."
   fi

   echo "Touching install.list and x-install.list files."
   LIST="${PACKAGE_BIN_TEMP}/install.list"
   X_LIST="${PACKAGE_BIN_TEMP}/x-install.list"
   touch "$LIST"
   touch "$X_LIST"

   echo "Processing the extension install contents."
   cd "$PACKAGE_INSTALL_ROOT"
   for i in ${CONTENTS-.}
   do
       echo "Processing the content $i."

       echo -e "Checking if the content is commented out ... \c"
       if [ "${i#\#}" != "$i" ]; then
            echo "yes"
            continue
       else
            echo "no"
       fi

       echo "Evaluating the content $i."
       i=$(eval echo "$i")

       echo -e "Checking if a special wildcard used ... \c"
       if [ -n "$(echo "$i" | grep '*')" ]; then
            echo "yes"
       else
            echo "no"
       fi

       if [ -z "$(echo "$i" | grep '*')" ]; then
            if [ "${i#x-}" = "$i" ]; then
                 echo "Putting the files in the content to the include list."
                 sudo find "$i" -not -type d >> "$LIST" || return 1
            else
                 i="${i#x-}"
                 echo "Putting the files in the content to the exclude list."
                 sudo find "$i" -not -type d >> "$X_LIST" || return 1
            fi
       else
            if [ "${i#x-}" = "$i" ]; then
                 echo "Putting the files in the content to the include list."
                 sudo find $i -not -type d >> "$LIST" || return 1
            else
                 i="${i#x-}"
                 echo "Putting the files in the content to the exclude list."
                 sudo find $i -not -type d >> "$X_LIST" || return 1
            fi
       fi
   done

   echo "Creating the extension contents tarball from the include and the exclude lists."
   sudo tar -T "$LIST" -X "$X_LIST" -cvpzf "$PACKAGE_BIN_TEMP/pkg.tar.gz" || return 1

   echo "Cleaning the package extension bin directory."
   [ -d "$PACKAGE_EXTENSION_BIN" ] && sudo rm -rf "$PACKAGE_EXTENSION_BIN"
   sudo mkdir -p "$PACKAGE_EXTENSION_BIN"

   echo "Extracting the extension contents tarball to the extension bin directory."
   sudo mkdir -p "$PACKAGE_EXTENSION_BIN"
   sudo tar -C "$PACKAGE_EXTENSION_BIN" -pvxzf "$PACKAGE_BIN_TEMP/pkg.tar.gz" || return 1

   echo "Cleaning the extension bin temporary directory."
   sudo rm -rf "$PACKAGE_BIN_TEMP"

   return 0

}

this_main() {

   echo ""
   echo "Splitting the package $PACKAGE extensions ..."

   for EXTENSION in $EXTENSIONS
   do
       set_extension

       echo "Cleaning the package bin temporary directory."
       [ -d "$PACKAGE_BIN_TEMP" ] && sudo rm -rf "$PACKAGE_BIN_TEMP"
       mkdir -p "$PACKAGE_BIN_TEMP"

       echo "Splitting the extension $PACKAGE_EXTENSION_NAME."
       this_split
       if [ "$?" -gt 0 ]; then
            echo "Error! splitting the extension $PACKAGE_EXTENSION_NAME failed."
            sudo rm -rf "$PACKAGE_BIN_TEMP"
            return 1
       else
            echo "Splitting the extension $PACKAGE_EXTENSION_NAME successful."
       fi
   done

   echo ""
   echo "Splitted the package $PACKAGE extensions successfully."

   return 0

}

print_it "Splitting the package $PACKAGE extensions ... \c"
this_main > "$PACKAGE_MESSAGE_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi
print_it hilight "successful!"

exit 0

