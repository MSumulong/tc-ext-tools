#!/bin/sh

############################################################################
#                                                                          #
#           checkit: Checks the extension for possible errors              #
#                                                                          #
############################################################################

#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  (C) Copyright 2011 Sercan Arslan
#

. /etc/init.d/tc-functions

TCEXTTOOLS_ROOT="$(dirname $0)/.."

if [ -f "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh" ]; then
     . "$TCEXTTOOLS_ROOT/etc/init.d/tc-ext-tools.sh"
else
     echo "${RED}$(basename $0):${BLUE} tc-ext-tools functions file not found!${NORMAL}"
     exit 1
fi

this_check() {

   echo ""
   echo "Cleaning the extension bin temporary directory."
   EXTENSION_BIN_TEMP="$TCEXTTOOLS_BIN_TEMP/$EXTENSION_NAME"
   [ -d "$EXTENSION_BIN_TEMP" ] && sudo rm -rf "$EXTENSION_BIN_TEMP"
   mkdir -p "$TCEXTTOOLS_BIN_TEMP"

   echo ""
   echo "Extracting the extension to the extension bin temporary directory."
   echo ""
   sudo unsquashfs -d "$EXTENSION_BIN_TEMP" "$TCEXTTOOLS_EXTENSION" || return 1

   echo ""
   echo "Checking the extension files ..."
   sudo find "$EXTENSION_BIN_TEMP" -not -type d -exec file "{}" \; || return 1

   echo ""
   echo "Checking the permissions and ownership of the extension tce.installed directory ..."
   if [ -d "$EXTENSION_BIN_TEMP/usr/local/tce.installed" ]; then
        OUT=$(sudo busybox ls -d -l "$EXTENSION_BIN_TEMP/usr/local/tce.installed")
        PERM=$(echo $OUT | cut -d" " -f1)
        OWNER=$(echo $OUT | cut -d" " -f3-4)

        if [ "$PERM" != "drwxrwxr-x" ] && [ "$PERM" != "drwxrwsr-x" ]; then
             echo "Error! wrong permissions on the extension tce.installed directory."
             return 1
        fi

        if [ "$OWNER" != "root staff" ]; then
             echo "Error! wrong ownership on the extension tce.installed directory."
             return 1
        fi

        echo ""
        echo "Checking the permissions and ownership of the extension tce.installed script ..."
        if [ -e "$EXTENSION_BIN_TEMP/usr/local/tce.installed/$EXTENSION_NAME" ]; then
             OUT=$(sudo busybox ls -l "$EXTENSION_BIN_TEMP/usr/local/tce.installed/$EXTENSION_NAME")
             PERM=$(echo $OUT | cut -d" " -f1)
             OWNER=$(echo $OUT | cut -d" " -f3-4)

             if [ "$PERM" != "-rwxrwxr-x" ] && [ "$PERM" != "-rwxrwsr-x" ]; then
                  echo "Error! wrong permissions on $EXTENSION_NAME tce.installed script."
                  return 1
             fi

             if [ "$OWNER" != "root staff" ]; then
                  echo "Error! wrong ownership on $EXTENSION_NAME tce.installed script."
                  return 1
             fi
        fi
   fi

   return 0

}

this_main() {

   echo ""
   echo "Starting the checking process for the package $PACKAGE extensions."

   echo ""
   echo "Cleaning the temporary bin directory."
   [ -d "$TCEXTTOOLS_BIN_TEMP" ] || mkdir -p "$TCEXTTOOLS_BIN_TEMP"

   for EXTENSION in $EXTENSIONS
   do
       echo ""
       echo "Setting the extension $EXTENSION parameters."
       set_extension || return 1

       echo ""
       echo "Checking if the extension exists ..."
       if [ ! -e "$TCEXTTOOLS_EXTENSION" ]; then
              echo "Error! You must create it first!"
              return 1
       fi

       echo ""
       echo "Checking the extension $EXTENSION_NAME."
       this_check
       if [ "$?" -gt 0 ]; then
            echo ""
            echo "Error! Checking the extension $EXTENSION_NAME failed."
            sudo rm -rf "$EXTENSION_BIN_TEMP"
            return 1
       else
            echo ""
            echo "Checking the extension $EXTENSION_NAME successful."
            sudo rm -rf "$EXTENSION_BIN_TEMP"
       fi
   done

   echo ""
   echo "Checking the package $PACKAGE extensions completed successfully."

   return 0

}

print_it "Checking the package $PACKAGE extensions ... \c"
this_main > "$TCEXTTOOLS_MESSAGE_LOG_2" 2>&1
if [ "$?" -gt 0 ]; then
     print_it error "failed!"
     exit 1
fi

print_it hilight "successful!"

exit 0

