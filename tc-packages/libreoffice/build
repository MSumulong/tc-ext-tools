
############################################################################
#                                                                          #
#  tc-ext-tools build functions: configure, compile, install, rules, etc.  #
#                                                                          #
############################################################################

unset J2REDIR J2SDKDIR JAVA_HOME

if [ -z "${JAVA_HOME}" ]; then
     [ -e /etc/profile.d/sun-jdk.sh ] && . /etc/profile.d/sun-jdk.sh
fi

if [ -z "${ANT_HOME}" ]; then
     [ -e /etc/profile.d/apache-ant.sh ] && . /etc/profile.d/apache-ant.sh
fi

[ -z "${MOZ_PLUGIN_PATH}" ] && export MOZ_PLUGIN_PATH=/usr/local/lib/mozilla/plugins

############################################################################ 
#                            Configure                                     #
############################################################################

build_configure() {

  sudo ln -sf /usr/local/lib/pkgconfig/mozilla-plugin.pc /usr/local/lib/pkgconfig/xulrunner-plugin.pc

  aclocal || return 1
  autoconf --force || return 1

  ./configure --prefix=/usr/local --with-distro=TinyCoreLinux \
              --without-binsuffix --with-build-version="$VERSION for Tiny Core Linux by Arslan S." \
              --with-docdir=/usr/local/share/doc/libreoffice --mandir=/usr/local/share/man \
              --with-installed-ooo-dirname=libreoffice --with-srcdir=${T_SRC}/additional-src \
              --disable-odk --enable-extensions --enable-graphite --enable-evolution2 \
              --enable-cairo --disable-kde4 --disable-pam --enable-crashdump \
              --enable-ldap --enable-lockdown --enable-opengl --enable-ogltrans \
              --enable-ext-pdfimport --enable-ext-presenter-console --enable-ext-presenter-minimizer \
              --enable-presenter-ext-ui --enable-ext-report-builder --enable-ext-wiki-publisher \
              --disable-gio --disable-mono --disable-kde --without-stlport --with-system-boost \
              --with-gcc-speedup=ccache --with-lang="" --without-git --without-java \
              --with-openclipart=/usr/local/share/openclipart --with-system-unixodbc-headers --with-sun-templates \
              --with-oooblogger --with-nlpsolver --with-google-docs --with-watch-window --with-ct2n --with-diagram \
              --disable-post-install-scripts --with-num-cpus=2 --with-drink=coffee || return 1

   # Registering java components fails during installation. (java loader error: No mapping from java to C++ ) 
   #--with-java --with-junit=/usr/local/share/java/junit.jar --with-ant-home="/usr/local/share/java/apache-ant"\

}

############################################################################ 
#                               Custom                                     #
############################################################################

build_download() {

  cd "$S_ROOT"

  [ -d "$T_SRC/additional-src" ] || mkdir -p "$T_SRC/additional-src"

  echo "Downloading additional libreoffice sources..."
  for i in $ADDITIONAL_SOURCE
  do
     if [ -e "$T_SRC/additional-src/libreoffice-${i}-${VERSION}.tar.bz2" ]; then
          echo "libreoffice-${i}-${VERSION}.tar.bz2 is already downloaded."
     else
          echo "Downloading libreoffice-${i}-${VERSION}.tar.bz2" 
          wget "$MIRROR/libreoffice-${i}-${VERSION}.tar.bz2" -O "$T_SRC/additional-src/libreoffice-${i}-${VERSION}.tar.bz2" || return 1
     fi
  done

  ./download || return 1

}

############################################################################ 
#                              Compile                                     #
############################################################################

build_compile() {

  [ -e /usr/bin/python ] || sudo ln -sf /usr/local/bin/python /usr/bin/python

  make || return 1

}

############################################################################ 
#                              Install                                     #
############################################################################

build_install() {

  ./bin/ooinstall "$I_ROOT/usr/local/libreoffice" || return 1

  ln -snf /usr/local/libreoffice/basis3.3 "$I_ROOT/usr/local/libreoffice/basis-link" || return 1
  ln -snf /usr/local/libreoffice/ure "$I_ROOT/usr/local/libreoffice/basis3.3/ure-link" || return 1

  install -m 755 -d "$I_ROOT/usr/local/bin"
  for WRAPPER in oobase  oocalc  oodraw  ooffice  ooimpress  oomath  ooweb  oowriter unopkg
  do
      install -m 755 "$PACKAGE_SRC/$WRAPPER" "$I_ROOT/usr/local/bin/$WRAPPER" || return 1
  done

  ln -s /usr/local/bin/ooffice "$I_ROOT/usr/local/bin/libreoffice"

  install -m 755 -d "$I_ROOT/usr/local/share/applications"
  install -m 644 desktop/*.desktop "$I_ROOT/usr/local/share/applications" || return 1
  mv -f "$I_ROOT/usr/local/share/applications/startcenter.desktop" "$I_ROOT/usr/local/share/applications/libreoffice.desktop"
  rm -f "$I_ROOT/usr/local/share/applications/template.desktop"

  for DIR in 16x16 22x22 24x24 32x32 48x48
  do
      install -m 755 -d "$I_ROOT/usr/local/share/icons/hicolor/$DIR/apps"
      install -m 755 -d "$I_ROOT/usr/local/share/icons/hicolor/$DIR/mimetypes"
      install -m 644 desktop/$DIR/*.png "$I_ROOT/usr/local/share/icons/hicolor/$DIR/apps" || return 1
      install -m 644 desktop/mimetypes/$DIR/*.png "$I_ROOT/usr/local/share/icons/hicolor/$DIR/mimetypes" || return 1
  done

  install -m 755 -d "$I_ROOT"/usr/local/share/icons/hicolor/scalable/apps
  install -m 644 desktop/scalable/*.svg "$I_ROOT"/usr/local/share/icons/hicolor/scalable/apps || return 1

  install -m 755 -d "$I_ROOT"/usr/local/share/mime/packages
  install -m 644 desktop/openoffice.xml "$I_ROOT/usr/local/share/mime/packages" || return 1

  rm -rf "$I_ROOT/usr/local/libreoffice/share/xdg"

}

############################################################################ 
#                                Rules                                     #
############################################################################

build_rules() {

   buildit load || exit 1
   buildit download || exit 1
   buildit convert || exit 1
   buildit unpack || exit 1
   buildit patch || exit 1
   buildit configure || exit 1
   buildit custom download || exit 1
   buildit compile || exit 1
   buildit install || exit 1
   buildit split || exit 1
   buildit strip || exit 1
   buildit create || exit 1
   buildit generate || exit 1
   buildit check || exit 1
   buildit package || exit 1

}

