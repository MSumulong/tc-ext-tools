#summary This wiki page will teach you the basics about tc-ext-tools.

= Introduction =

TC-EXT-TOOLS is an extension build system developed for Tiny Core Linux. The main aim of the project is to provide a high level, easy extension maintenance system for package maintainers from Tiny Core Linux.

= Design Concepts =

 * Divide and conquer.
 * Easy maintenance of packages.
 * Minimize initial packaging time.
 * Each package has a source, and source is a tarball or vcs repository.
 * Extensions are created from packages.
 * All the information to build the packages is hosted at an svn repository and is available to everyone.
 * Support for Tiny Core Linux specific features (tce.installed, wbar icon etc.).
 * Error handling.

= Installation =

Download and extract the latest stable tarball or check out the latest source code from svn repository and follow instructions in the INSTALL file.

{{{
svn checkout http://tc-ext-tools.googlecode.com/svn/trunk/
}}}

_Note: There will be stable and preview tarball releases in the future._

= Usage =

*Adding a new package*
  * First boost the package with boostit
{{{
mkdir package
cd package
boostit <package> <version> "extension1 extension2 ..."
}}}
_Hint: version can be a number, "svn" or "git"._

  * Then edit the files generated under package root directory by using your favorite file manager and text editor.

  * Most important variables that you need to specify in the common file are SOURCE, and BUILD_DEPENDS. You also need to define configure, compile, install, and rules functions in the package build file.
_Note: Rules function is placed in the build file to give complete control to the user for defining the build rules._

_Hint: SOURCE can be the direct link to a tarball or the url of an svn or git repository._

  * Then you can execute buildit in the package root directory to build the package with the rules defined in the build file.
{{{
buildit
}}}
  * When creating a package for the first time you better advance step by step.
{{{
buildit load|download|convert|unpack|patch|configure|compile|install|split|strip|create|check|generate|package|encrypt
}}}
  * There is also custom build function support which can be used for defining custom functions.
{{{
buildit custom <function>
}}}
_Hint: You need to define build_<function> in the package build file._
  * If you want to see configure, compile, install output messages.
{{{
buildit print configure|compile|install
}}}
  * If an error occurs you can see the details about the error.
{{{
buildit print error
}}}
* See available packages for more.
{{{
svn checkout http://tc-ext-tools.googlecode.com/svn/tc-packages/
}}}

*Important Note: This project is still under development and is in alpha stage. So any suggestion or critiques welcome.*

*Sercan Arslan <arslanserc@gmail.com>*
